{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gets_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountFunded",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x92d2c894eced2149600a8b890cefdcea9aaac6b19b6efdb787652e2e1a997371",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "814775",
    "logsBloom": "0x
    "blockHash": "0x636341842215b2b27252d5b1450d0a3d13d7b999a95d8ea9b936c44b233bde68",
    "transactionHash": "0x92d2c894eced2149600a8b890cefdcea9aaac6b19b6efdb787652e2e1a997371",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "814775",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "962730af1855c6f81136ef7ab2cd41e6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gets_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountFunded\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ayush Petwal\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// AIM:\\n// Get funds from the users\\n// Withdraw funds\\n// Set Minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {PriceConverter} from \\\"./PriceConverter.sol\\\";\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__notOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Ayush Petwal\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    // all the uint256 can use the library PriceConvertor\\n    using PriceConverter for uint256;\\n\\n    uint256 constant MIN_USD = 5e18;\\n    address private immutable i_owner;\\n\\n    // i_var --> immutable variable\\n    // s_var --> Refers to the variable in the persistant storage\\n    address[] private s_funders;\\n    mapping(address funder => uint256 amountFunded)\\n        public s_addressToAmountFunded;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address s_priceFeedAddr) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddr);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Must be owner !!!\\\");\\n        // Gas Optimised\\n        if (msg.sender != i_owner) {\\n            revert FundMe__notOwner();\\n        }\\n        _; // After checking then execute the function\\n    }\\n\\n    function gets_priceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"didn't have enough eth\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    // require(bool condition) :->\\n    // -> reverts if the condition is not met - to be used for errors in inputs or external components.\\n    // what is a revert ?\\n    // Undo any actions that have been done, and send the remaining gas back !!!\\n\\n    function withdraw() public onlyOwner {\\n        // Only allow the owner to withdraw the funds\\n        // Two ways 1) require  2) modifier\\n        // require(msg.sender == owner, \\\"Must be owner to withdraw !!!\\\");\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reseting the array <- Creating a new address array object\\n        s_funders = new address[](0);\\n\\n        (bool callStatus, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callStatus, \\\"Call failed !!!\\\");\\n    }\\n\\n    // Getters for each private variable\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n    // similarly for the rest of the private vaiables if any\\n}\\n// Getting the Global special variables\\n// https://docs.soliditylang.org/en/v0.8.29/units-and-global-variables.html\\n\",\"keccak256\":\"0x2e4000dc121cca62ce5a9477995d347afd5b3d61b78cda59e3f534e1c04d5129\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // Getting real time Data from the data feeds\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Interacting with the contract we need two things\\n        // Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // ABI (Interface of functions )\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ethAmount = 1e18\\n        // ethPrice = 2000e18\\n        // ethAmountinUSD = 2000\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountinUSD = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountinUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9607a96d3b1dcf2b550553f8854ba8401675ebc112e6ef7fdd32f46a8f0591\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eb8380380610eb883398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d5961015f600039600081816101fb01526104370152610d596000f3fe6080604052600436106100705760003560e01c80633ccfd60b1161004e5780633ccfd60b14610108578063893d20e81461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630ec3b027146100755780631bf6132d146100a05780631f28d1fe146100dd575b600080fd5b34801561008157600080fd5b5061008a610191565b60405161009791906107cf565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c2919061082d565b6101b7565b6040516100d49190610873565b60405180910390f35b3480156100e957600080fd5b506100f26101cf565b6040516100ff91906107cf565b60405180910390f35b34801561011457600080fd5b5061011d6101f9565b005b34801561012b57600080fd5b50610134610433565b604051610141919061089d565b60405180910390f35b61015261045b565b005b34801561016057600080fd5b5061017b600480360381019061017691906108e4565b610595565b604051610188919061089d565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027e576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103235760008082815481106102a3576102a2610911565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610281565b50600067ffffffffffffffff81111561033f5761033e610940565b5b60405190808252806020026020018201604052801561036d5781602001602082028036833780820191505090505b50600090805190602001906103839291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103aa906109a0565b60006040518083038185875af1925050503d80600081146103e7576040519150601f19603f3d011682016040523d82523d6000602084013e6103ec565b606091505b5050905080610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610a12565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b674563918244f40000610499600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105dc90919063ffffffff16565b10156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610a7e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058c9190610acd565b92505081905550565b60008082815481106105aa576105a9610911565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105e883610618565b90506000670de0b6b3a764000082866106019190610b01565b61060b9190610b72565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610c30565b5050509150506402540be400816106a19190610cab565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061079561079061078b84610750565b610770565b610750565b9050919050565b60006107a78261077a565b9050919050565b60006107b98261079c565b9050919050565b6107c9816107ae565b82525050565b60006020820190506107e460008301846107c0565b92915050565b600080fd5b60006107fa82610750565b9050919050565b61080a816107ef565b811461081557600080fd5b50565b60008135905061082781610801565b92915050565b600060208284031215610843576108426107ea565b5b600061085184828501610818565b91505092915050565b6000819050919050565b61086d8161085a565b82525050565b60006020820190506108886000830184610864565b92915050565b610897816107ef565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c18161085a565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f96107ea565b5b6000610908848285016108cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061098a60008361096f565b91506109958261097a565b600082019050919050565b60006109ab8261097d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564202121210000000000000000000000000000000000600082015250565b60006109fc600f836109b5565b9150610a07826109c6565b602082019050919050565b60006020820190508181036000830152610a2b816109ef565b9050919050565b7f6469646e2774206861766520656e6f7567682065746800000000000000000000600082015250565b6000610a686016836109b5565b9150610a7382610a32565b602082019050919050565b60006020820190508181036000830152610a9781610a5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad88261085a565b9150610ae38361085a565b9250828201905080821115610afb57610afa610a9e565b5b92915050565b6000610b0c8261085a565b9150610b178361085a565b9250828202610b258161085a565b91508282048414831517610b3c57610b3b610a9e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7d8261085a565b9150610b888361085a565b925082610b9857610b97610b43565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc281610ba3565b8114610bcd57600080fd5b50565b600081519050610bdf81610bb9565b92915050565b6000819050919050565b610bf881610be5565b8114610c0357600080fd5b50565b600081519050610c1581610bef565b92915050565b600081519050610c2a816108b8565b92915050565b600080600080600060a08688031215610c4c57610c4b6107ea565b5b6000610c5a88828901610bd0565b9550506020610c6b88828901610c06565b9450506040610c7c88828901610c1b565b9350506060610c8d88828901610c1b565b9250506080610c9e88828901610bd0565b9150509295509295909350565b6000610cb682610be5565b9150610cc183610be5565b9250828202610ccf81610be5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0757610d06610a9e565b5b8282058414831517610d1c57610d1b610a9e565b5b509291505056fea2646970667358221220704607cb7d51fc828c1bc3539c3588c67ca361d5054f856f8b034eb6686811ab64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80633ccfd60b1161004e5780633ccfd60b14610108578063893d20e81461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630ec3b027146100755780631bf6132d146100a05780631f28d1fe146100dd575b600080fd5b34801561008157600080fd5b5061008a610191565b60405161009791906107cf565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c2919061082d565b6101b7565b6040516100d49190610873565b60405180910390f35b3480156100e957600080fd5b506100f26101cf565b6040516100ff91906107cf565b60405180910390f35b34801561011457600080fd5b5061011d6101f9565b005b34801561012b57600080fd5b50610134610433565b604051610141919061089d565b60405180910390f35b61015261045b565b005b34801561016057600080fd5b5061017b600480360381019061017691906108e4565b610595565b604051610188919061089d565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027e576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103235760008082815481106102a3576102a2610911565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610281565b50600067ffffffffffffffff81111561033f5761033e610940565b5b60405190808252806020026020018201604052801561036d5781602001602082028036833780820191505090505b50600090805190602001906103839291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103aa906109a0565b60006040518083038185875af1925050503d80600081146103e7576040519150601f19603f3d011682016040523d82523d6000602084013e6103ec565b606091505b5050905080610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610a12565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b674563918244f40000610499600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105dc90919063ffffffff16565b10156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610a7e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058c9190610acd565b92505081905550565b60008082815481106105aa576105a9610911565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105e883610618565b90506000670de0b6b3a764000082866106019190610b01565b61060b9190610b72565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610c30565b5050509150506402540be400816106a19190610cab565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061079561079061078b84610750565b610770565b610750565b9050919050565b60006107a78261077a565b9050919050565b60006107b98261079c565b9050919050565b6107c9816107ae565b82525050565b60006020820190506107e460008301846107c0565b92915050565b600080fd5b60006107fa82610750565b9050919050565b61080a816107ef565b811461081557600080fd5b50565b60008135905061082781610801565b92915050565b600060208284031215610843576108426107ea565b5b600061085184828501610818565b91505092915050565b6000819050919050565b61086d8161085a565b82525050565b60006020820190506108886000830184610864565b92915050565b610897816107ef565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c18161085a565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f96107ea565b5b6000610908848285016108cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061098a60008361096f565b91506109958261097a565b600082019050919050565b60006109ab8261097d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564202121210000000000000000000000000000000000600082015250565b60006109fc600f836109b5565b9150610a07826109c6565b602082019050919050565b60006020820190508181036000830152610a2b816109ef565b9050919050565b7f6469646e2774206861766520656e6f7567682065746800000000000000000000600082015250565b6000610a686016836109b5565b9150610a7382610a32565b602082019050919050565b60006020820190508181036000830152610a9781610a5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad88261085a565b9150610ae38361085a565b9250828201905080821115610afb57610afa610a9e565b5b92915050565b6000610b0c8261085a565b9150610b178361085a565b9250828202610b258161085a565b91508282048414831517610b3c57610b3b610a9e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7d8261085a565b9150610b888361085a565b925082610b9857610b97610b43565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc281610ba3565b8114610bcd57600080fd5b50565b600081519050610bdf81610bb9565b92915050565b6000819050919050565b610bf881610be5565b8114610c0357600080fd5b50565b600081519050610c1581610bef565b92915050565b600081519050610c2a816108b8565b92915050565b600080600080600060a08688031215610c4c57610c4b6107ea565b5b6000610c5a88828901610bd0565b9550506020610c6b88828901610c06565b9450506040610c7c88828901610c1b565b9350506060610c8d88828901610c1b565b9250506080610c9e88828901610bd0565b9150509295509295909350565b6000610cb682610be5565b9150610cc183610be5565b9250828202610ccf81610be5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0757610d06610a9e565b5b8282058414831517610d1c57610d1b610a9e565b5b509291505056fea2646970667358221220704607cb7d51fc828c1bc3539c3588c67ca361d5054f856f8b034eb6686811ab64736f6c634300081c0033",
  "devdoc": {
    "author": "Ayush Petwal",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}